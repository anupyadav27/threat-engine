compute:
  scope: subscription
  iterate_resource_groups: true
  discovery:
    - discovery_id: vms
      resource_group_param: resource_group_name
      calls:
        - action: virtual_machines.list
          resource_group_param: resource_group_name
          fields:
            - path: __self__
              var: vm
            - path: name
              var: vm_name
            - path: id
              var: vm_id
    - discovery_id: critical_disks
      resource_group_param: resource_group_name
      calls:
        - action: disks.list_by_resource_group
          resource_group_param: resource_group_name
          fields:
            - path: __self__
              var: disk
            - path: encryption.type
              var: encryption_type
            - path: encryption.disk_encryption_set_id
              var: disk_encryption_set_id
  checks:
    - check_id: vm_managed_disks
      title: Ensure VMs use managed disks
      severity: medium
      for_each: vms
      param: vm
      calls:
        - action: self
          fields:
            - path: storage_profile.os_disk.managed_disk
              operator: exists
              expected: true
    - check_id: vm_no_public_ip
      title: Ensure VMs do not have public IPs directly attached
      severity: high
      for_each: vms
      param: vm
      calls:
        - action: self
          fields:
            - path: network_profile.network_interfaces[].id
              operator: not_contains
              expected: "/publicIPAddresses/"
    - check_id: disk_encrypted_with_customer_managed_key
      title: Ensure disk is encrypted with customer-managed key
      severity: high
      for_each: critical_disks
      param: disk
      calls:
        - action: self
          fields:
            - path: encryption.type
              operator: equals
              expected: EncryptionAtRestWithCustomerKey
            - path: encryption.disk_encryption_set_id
              operator: exists 